name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  job:
    name: ${{ matrix.os }}-hosted-pure
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
            windows-latest,
            ubuntu-latest,
          # macos-latest,
        ]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgPackages: 'openssl:x64-windows sqlite3:x64-windows'
            vcpkgId: 5568f110b509a9fd90711978a7cb76bae75bb092
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgPackages: 'openssl:x64-linux sqlite3:x64-linux'
            vcpkgId: 5568f110b509a9fd90711978a7cb76bae75bb092

    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build/

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: lukka/get-cmake@latest

      - name: Restore artifacts / setup vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          vcpkgGitCommitId: ${{ matrix.vcpkgId }}

      - run: $VCPKG_ROOT/vcpkg install --recurse openssl:${{ matrix.triplet }} sqlite3:${{ matrix.triplet }}

      - name: Load files
        run: cmake --preset "MinGW x64-debug"
        if: matrix.os == 'windows-latest'

      - name: Load files
        run: cmake --preset "MinGW x64-debug"
        if: matrix.os == 'ubuntu-latest'

      - name: Build
        run: cmake --build --preset "MinGW x64"
        if: matrix.os == 'windows-latest'

      - name: Build
        run: cmake --build --preset "MinGW x64"
        if: matrix.os == 'ubuntu-latest'

#  windows:
#    name: Run on Windows latest
#    runs-on: windows-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: install dependencies
#        run: |
#          choco install cmake
#          cmake --version
#
#      - name: Run vcpkg
#        uses: lukka/run-vcpkg@v4
#        with:
#          vcpkgArguments: 'openssl:x64-windows sqlite3:x64-windows'
#          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
#
#      - name: Create Build Directory
#        run: mkdir cmake-build-mingw-x64
#
#      - name: Build
#        run: cmake --preset "MinGW x64-debug"
#
#      - name: Run
#        run: cmake --build --preset "MinGW x64"
#
#  linux:
#    name: Run on Ubuntu latest
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: install dependencies
#        run: |
#          sudo apt-get install cmake
#          cmake --version
#
#      - name: Run vcpkg
#        uses: lukka/run-vcpkg@v4
#        with:
#          vcpkgArguments: 'openssl:x64-windows sqlite3:x64-windows'
#          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
#
#      - name: Create Build Directory
#        run: mkdir cmake-build-wsl-x64
#
#      - name: Build
#        run: cmake --preset "WSL x64-debug"
#
#      - name: Run
#        run: cmake --build --preset "MinGW x64"
