name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  #  build:
  #    strategy:
  #      matrix:
  #        os: [ubuntu-latest, windows-latest, macOS-latest]
  #
  #    runs-on: ${{ matrix.os }}
  #    steps:
  #      - if: runner.os == 'Windows'
  #        uses: actions/cache@v1
  #        with:
  #          path: ${{env.TEMP}}/chocolatey
  #          key: ${{matrix.os}}-chocolatey-${{github.job_id}}
  #          restore-keys: ${{matrix.os}}-chocolatey-


  linux:
    name: Run on Ubuntu latest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run linux.sh
        run: linux.sh
        shell: bash

      - name: Create Build Directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake

  windows:
    name: Run on Windows latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: egor-tensin/setup-mingw@v2
        with:
          platform: x86

      - name: Run windows.bat
        run: ./windows.bat
        shell: pwsh

      - name: Create Build Directory
        run: mkdir build

      #      - name: Configure Cmake
      #        run: CMake configure

      - name: Build
        run: cmake --build ${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=C:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake
